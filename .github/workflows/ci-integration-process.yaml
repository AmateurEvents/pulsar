#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: CI - Integration - Process
on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:

  process:
    name:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: checkout
        uses: actions/checkout@v1

      - name: Get directory from mnt
        run: ls -l /mnt

      - name: Get docker images
        run: docker images

      - name: Before get space size
        run: df -h

      - name: Get root infos
        run: ls /

      - name: Get home directory
        run: ls /home

      - name: GET home runner
        run: ls -lh /home/runner/ && du -sh /home/runner/

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/ && du -sh /home/runner/work/pulsar/

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/pulsar && du -sh /home/runner/work/pulsar/pulsar

      - name: get root size
        run: sudo du -sh /* | sort -rn | head

      - name: run install by skip tests
        run: mvn clean install -DskipTests

      - name: build artifacts and docker image
        run: mvn -B -f /home/runner/work/pulsar/pulsar/tests/docker-images/latest-version-image/pom.xml install -am -Pdocker -DskipTests

      - name: get home size
        run: sudo du -sh *

      - name: Get directory from mnt
        run: ls -l /mnt

      - name: Before get space size
        run: df -h

      - name: Get root infos
        run: ls /

      - name: Get home directory
        run: ls /home

      - name: GET home runner
        run: ls -lh /home/runner/ && du -sh /home/runner/*

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/ && du -sh /home/runner/work/pulsar/*

      - name: Get docker images
        run: docker images

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/pulsar && du -sh /home/runner/work/pulsar/pulsar

      - name: Get docker images
        run: docker images

      - name: Clean docker
        run: docker system prune -f

      #      - name: Remove no used image
      #        run: docker images | grep -v apachepulsar/pulsar-test-latest-version | awk '{print $3}' | grep -v IMAGE | sort -u | xargs docker rmi -f

      #      - name: Remove pulsar-all
      #        run: docker images | grep pulsar-all | awk '{print $3 }' | xargs docker rmi -f
      #
      - name: Remove node image
        run: docker rmi -f node:10 && docker rmi -f node:12 && docker rmi -f buildpack-deps:stretch

      - name: Remove node image
        run: docker rmi -f jekyll/builder:latest && docker rmi -f mcr.microsoft.com/azure-pipelines/node8-typescript:latest

      - name: Before get space size
        run: df -h

      - name: Get docker images
        run: docker images

      - name: run integration tests
        run: mvn -B -f tests/pom.xml test -DintegrationTestSuiteFile=pulsar-process.xml -DintegrationTests -DredirectTestOutputToFile=false

      - name: After get spache size
        run: df -h

      - name: Get directory from mnt
        run: ls -l /mnt

      - name: Before get space size
        run: df -h

      - name: Get root infos
        run: ls /

      - name: Get home directory
        run: ls /home

      - name: GET home runner
        run: ls -lh /home/runner/ && du -sh /home/runner/

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/ && du -sh /home/runner/work/pulsar/

      - name: GET home runner work
        run: ls -lh /home/runner/work/pulsar/pulsar && du -sh /home/runner/work/pulsar/pulsar
